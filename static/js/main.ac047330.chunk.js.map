{"version":3,"sources":["components/Home.js","components/ServerInterface/PlacesData.js","components/ServerInterface/server.js","components/Places.js","components/AddPlace.js","components/Reviews.js","components/WriteReview.js","App.js","reportWebVitals.js","index.js"],"names":["Home","props","search","event","setState","preventDefault","onInputChange","value","target","name","state","searchTerm","city","this","from","pathname","to","className","onSubmit","rows","cols","type","placeholder","onChange","React","Component","placesdata","cat","description","reviews","author","rate","rating","server","toUpperCase","data","length","filter","x","getAllPlaces","addPlace","category","place","push","deletePlace","i","curr","splice","addReview","review","Places","places","showPlaces","allPlaces","place1","onClick","location","term","AddPlace","submitPlace","complete","maxLength","size","Reviews","showReviews","allRevs","WriteReview","submitReview","App","path","render","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ac047330.chunk.js","sourcesContent":["import React from 'react';\nimport './Home.css';\nimport { Redirect } from 'react-router-dom';\n\nclass Home extends React.Component {\n    constructor(props){\n        super(props)\n        this.state = {\n            searchTerm:\"\",\n            city:\"\",\n            state:\"\",\n            search: false\n        };\n    }\n\n    search = (event) => {\n        this.setState({search: true})\n        event.preventDefault();\n    }\n\n    onInputChange = (event) => {\n        const value = event.target.value;\n        const name = event.target.name;\n        this.setState({[name]: value});\n    }\n\n    render() {\n        if(this.state.search) {\n            let from = {pathname: \"/places\", state: {searchTerm: this.state.searchTerm, city: this.state.city, state: this.state.state}};\n            return (\n                <Redirect to={from} />\n            );\n        }\n\n        return (\n            <div className=\"home\">\n                <h1 className=\"title\">mynearbyplaces</h1>\n                <form onSubmit={this.search}>\n                    <input \n                    className=\"search\" \n                    rows=\"1\" cols=\"30\"\n                    type=\"text\"\n                    name=\"searchTerm\"\n                    placeholder=\"Category\"\n                    value={this.state.searchTerm}\n                    onChange={this.onInputChange} />\n                    <input \n                    className=\"search\" \n                    rows=\"1\" cols=\"30\"\n                    type=\"text\"\n                    name=\"city\"\n                    placeholder=\"City\"\n                    value={this.state.city}\n                    onChange={this.onInputChange} />\n                    <input \n                    className=\"search\" \n                    rows=\"1\" cols=\"30\"\n                    type=\"text\"\n                    name=\"state\"\n                    placeholder=\"State\"\n                    value={this.state.state}\n                    onChange={this.onInputChange} />\n                    <input\n                    type=\"submit\" \n                    className=\"searchButton\" \n                    value=\"Search\">\n                    </input>\n                </form>\n            </div>\n        );\n    }\n}\n\nexport default Home;","let placesdata = [\n    {\n        name: \"Pizza Planet\",\n        city: \"Tucson\",\n        state: \"AZ\",\n        cat: \"food\",\n        description: \"Pizza place that is out of this world.\",\n        reviews: [\n            {\n                author: \"Buzz Lightyear\",\n                rate: 5,\n                rating: \"The pizza here is to infinity and beyond.\"\n            },\n            {\n                author: \"Mr.Potato Head\",\n                rate: 2,\n                rating: \"Hated it.\"\n            }\n        ]\n    },\n    {\n        name: \"Bookmans\",\n        city: \"Phoenix\",\n        state: \"AZ\",\n        cat: \"shopping\",\n        description: \"Bookstore that offers both secondhand and new books. Also offers a varitey of music records and instruments.\",\n        reviews: [\n            {\n                author: \"Woody\",\n                rate: 4,\n                rating: \"Nice place. Enjoyed going there.\"\n            },\n            {\n                author: \"Jessie\",\n                rate: 4,\n                rating: \"Found the book I needed.\"\n            }\n        ]\n    }\n];\nexport default placesdata;\n\n","import placesdata from \"./PlacesData.js\";\n\nlet search = (cat, city, state) => {\n    cat = cat.toUpperCase();\n    city = city.toUpperCase();\n    state = state.toUpperCase();\n\n    let data = [];\n    if(cat.length === 0 && city.length === 0 && state.length === 0){\n        return placesdata;\n    }\n    \n    if(city.length >0) {\n        data = placesdata.filter(x => x.city.toUpperCase() === city);\n    }\n\n    if(state.length > 0) {\n        if(city.length > 0){\n            data = data.filter(x => x.state.toUpperCase() === state);\n        }else {\n            data = placesdata.filter(x => x.state.toUpperCase() === state);\n        }\n    }\n\n    if(cat.length > 0){\n        if(city.length > 0 || state.length > 0){\n            data = data.filter(x => x.cat.toUpperCase() === cat);\n        }else {\n            data = placesdata.filter(x => x.cat.toUpperCase() === cat);\n        }\n    }\n\n    return data;\n}\n\nlet getAllPlaces = () => {\n    return placesdata;\n}\n\nlet addPlace = (name, city, state, category, description) => {\n    let place = {\n        name: name,\n        city: city,\n        state: state,\n        cat: category,\n        description: description,\n        reviews: []\n    };\n    \n    placesdata.push(place);\n}\n\nlet deletePlace = (name, city, state) => {\n    for(let i = 0; i < placesdata.length; i++){\n        let curr = placesdata[i];\n        if(curr.name === name && curr.city === city && curr.state === state){\n            placesdata.splice(i, 1);\n        }\n    }\n}\n\nlet addReview = (place, author, rate, rating) => {\n    let review = {\n        author: author,\n        rate: rate,\n        rating: rating\n    }\n\n    for(let i = 0; i < placesdata.length; i++){\n        let curr = placesdata[i];\n        if(curr.name === place.name && curr.city === place.city && curr.state === place.state){\n            curr.reviews.push(review);\n        }\n    }\n}\n\nlet server = {search: search, getAllPlaces: getAllPlaces, addPlace: addPlace, deletePlace: deletePlace,\n    addReview: addReview};\n\nexport default server;\n","import React from 'react';\nimport './Places.css';\nimport { Link } from 'react-router-dom';\nimport server from './ServerInterface/server';\n\n\n\nclass Places extends React.Component{\n    constructor(props){\n        super(props)\n        this.state = {\n            searchTerm: \"\",\n            places: []\n        }\n    }\n\n    deletePlace = (name, city, state) => {\n        server.deletePlace(name, city, state);\n        this.setState({places: server.getAllPlaces()});\n    }\n\n    showPlaces = () => {\n        let allPlaces = [];\n        let places = this.state.places;\n\n        for(let i = 0; i < places.length; i++){\n            let place = places[i]\n            let from = {pathname: \"/reviews\", state: {place1: place}};\n            allPlaces.push(\n                <div className=\"place\" key={i}>\n                    <p className=\"makeRed\">{place.name}</p>\n                    <p><b>Category:</b> {place.cat}</p>\n                    <p><b>Located:</b> {place.city + \", \" + place.state}</p>\n                    <p><b>Description:</b> {place.description}</p>\n                    <Link to={from}>\n                        <button \n                        className=\"pButton readButton\"\n                        >Read Reviews</button>\n                    </Link>\n                    <Link to={{pathname: \"/writereview\", state: {place1: place}}}>\n                        <button \n                        className=\"pButton\"\n                        >Write a Review</button>\n                    </Link>\n                    <button \n                    className=\"pButton\"\n                    onClick={() => this.deletePlace(place.name, place.city, place.state)}\n                    >Delete</button>\n                </div>\n            )\n        }\n\n        return (\n            allPlaces\n        );\n    }\n\n    componentDidMount() {\n        const location = this.props.location;\n        let term = \"\";\n        let cat = \"\";\n        let city = \"\";\n        let state = \"\";\n\n\n        if(location){\n            if(location.state){\n                if(location.state.searchTerm){\n                    cat = location.state.searchTerm;\n                    term = term + \" \" + cat\n                }\n                if(location.state.city){\n                    city = location.state.city;\n                    term = term + \" \" + city\n                }\n                if(location.state.state){\n                    state = location.state.state;\n                    term = term + \" \" + state\n                }\n            }\n        }\n        this.setState({searchTerm: term});\n        this.setState({places: server.getAllPlaces(cat, city, state)});\n    }\n\n    render() {\n\n        return (\n            <div>\n                <div className=\"header\">\n                    <h2>mynearbyplaces</h2>\n                </div>\n                <br></br>\n                <div className=\"header2\">\n                    <Link to=\"/mynearbyplaces\">\n                        <button className=\"homeButton pButton\">Home</button>\n                    </Link>\n                    <p>Showing all results:{this.state.searchTerm}</p>\n                    <Link to=\"/addplace\">\n                        <button className=\"addPlaceButton pButton\">Add a Place</button>\n                    </Link>\n                </div>\n                <hr></hr>\n                {this.showPlaces()}\n            </div>\n        );\n    }\n}\n\nexport default Places;","import React from 'react';\nimport './AddPlace.css';\nimport { Link, Redirect } from 'react-router-dom';\nimport server from \"./ServerInterface/server.js\";\n\nclass AddPlace extends React.Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            name: \"\",\n            city: \"\",\n            state: \"\",\n            category: \"\",\n            description: \"\",\n            complete: false\n        }\n    }\n\n    onInputChange = (event) => {\n        const value = event.target.value;\n        const name = event.target.name;\n        this.setState({[name]: value});\n    }\n\n    submitPlace = (event) => {\n        const {name, city, state, category, description} = this.state;\n        server.addPlace(name, city, state, category, description);\n        event.preventDefault();\n        this.setState({complete: true});\n    }\n\n    render() {\n        if(this.state.complete){\n            return (<Redirect to={'/mynearbyplaces'} />);\n        }\n        return (\n            <div>\n                <div className=\"header\">\n                    <h2>mynearbyplaces</h2>\n                </div>\n                <div className=\"header2\">\n                    <Link to=\"/mynearbyplaces\">\n                        <button className=\"homeButton2 pButton\">Home</button>\n                    </Link>\n                </div>\n                <hr />\n                <p className=\"placeHeader\">Add a Place</p>\n                <div className=\"form\">\n                    <form onSubmit={this.submitPlace}>\n                        <label>Name: </label>\n                        <input\n                            className=\"input\"\n                            type=\"text\"\n                            name=\"name\"\n                            value={this.state.name}\n                            onChange={this.onInputChange}\n                        ></input><br />\n                        <label>City: </label>\n                        <input\n                            className=\"input\"\n                            type=\"text\"\n                            name=\"city\"\n                            value={this.state.city}\n                            onChange={this.onInputChange}\n                        ></input>\n                        <label>State: </label>\n                        <input\n                            className=\"input\"\n                            type=\"textarea\"\n                            name=\"state\"\n                            value={this.state.state}\n                            onChange={this.onInputChange}\n                            maxLength=\"2\"\n                            size=\"2\"\n                        ></input><br />\n                        <label>Category: </label>\n                        <input\n                            className=\"input\"\n                            type=\"text\"\n                            name=\"category\"\n                            value={this.state.category}\n                            onChange={this.onInputChange}\n                        ></input>\n                        <label>Description: </label><br />\n                        <textarea\n                            className=\"desc\"\n                            type=\"text\"\n                            name=\"description\"\n                            value={this.state.description}\n                            onChange={this.onInputChange}\n                        ></textarea><br />\n                        <input\n                            type=\"submit\"\n                            className=\"sButton pButton\"\n                        ></input>\n                    </form>\n                </div>\n\n            </div>\n        )\n    }\n\n}\n\nexport default AddPlace;","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport './Reviews.css'\n\nclass Reviews extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            place: {}\n        }\n    };\n\n    showReviews = (reviews) => {\n        let allRevs = [];\n        if(reviews.length === 0) {\n            return (\n                <h3 className=\"noRevs\">No Reviews Found</h3>\n            );\n        }\n        for(let i = 0; i < reviews.length; i++){\n            allRevs.push(\n                <div className=\"review\" key={i}>\n                    <h4><b className=\"labelRev\">Author: </b>{reviews[i].author}</h4>\n                    <p>{reviews[i].rate} out of 5</p>\n                    <p><b className=\"labelRev\">Rating: </b>{reviews[i].rating}</p>\n                    \n                </div>\n            )\n        }        \n\n        return (\n            allRevs\n        );\n    }\n\n    render() {\n        const location = this.props.location;\n        let place = {};\n        if(location){\n            if(location.state){\n                if(location.state.place1){\n                    let curr = location.state.place1;\n                    place = curr;\n                }\n            }\n        }\n        return (\n            <div>\n                <div className=\"header\">\n                    <h2>mynearbyplaces</h2>\n                </div>\n                <div className=\"header2\">\n                    <Link to=\"/mynearbyplaces\">\n                        <button className=\"homeButton2 pButton\">Home</button>\n                    </Link>\n                    <Link to={{pathname: \"/writereview\", state: {place1: place}}}>\n                        <button className=\"addReviewButton pButton\">Write a Review</button>\n                    </Link>\n                </div>\n                <hr />\n                <p className=\"placeHeader\">Review(s) for '{place.name}'</p>\n                {this.showReviews(place.reviews)}\n            </div>\n        );\n    }\n}\n\nexport default Reviews;","import React from 'react';\nimport './WriteReview.css';\nimport { Link, Redirect } from 'react-router-dom';\nimport server from \"./ServerInterface/server.js\";\n\n\nclass WriteReview extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            author: \"\",\n            rate: 1,\n            rating: \"\",\n            complete: false\n        }\n    }\n\n    onInputChange = (event) => {\n        const value = event.target.value;\n        const name = event.target.name;\n        this.setState({[name]: value});\n    }\n\n    submitReview = (place) => {\n        const {author, rate, rating} = this.state;\n        server.addReview(place, author, rate, rating);\n        this.setState({complete: true});\n    }\n\n    render() {\n        const location = this.props.location;\n        let place = {};\n        if(location){\n            if(location.state){\n                if(location.state.place1){\n                    let curr = location.state.place1;\n                    place = curr;\n                }\n            }\n        }\n\n        if (this.state.complete) {\n            return (<Redirect to={{pathname: \"/reviews\", state: {place1: place}}} />);\n        }\n\n        return (\n            <div>\n                <div className=\"header\">\n                    <h2>mynearbyplaces</h2>\n                </div>\n                <div className=\"header2\">\n                    <Link to=\"/mynearbyplaces\">\n                        <button className=\"homeButton2 pButton\">Home</button>\n                    </Link>\n                </div>\n                <hr />\n                <p className=\"placeHeader\">Write a Review for '{place.name}'</p>\n                <form className=\"form\" onSubmit={() => this.submitReview(place)}>\n                    <label>Author: </label>\n                        <input\n                        className=\"input\"\n                        type=\"text\"\n                        name=\"author\"\n                        value={this.state.author}\n                        onChange={this.onInputChange}\n                    ></input>\n                    <label>Stars: </label>\n                    <select\n                        className=\"input\"\n                        type=\"text\"\n                        name=\"rate\"\n                        value={this.state.rate}\n                        onChange={this.onInputChange}>\n                            <option value=\"1\">1</option>\n                            <option value=\"2\">2</option>\n                            <option value=\"3\">3</option>\n                            <option value=\"4\">4</option>\n                            <option value=\"5\">5</option>\n                    </select><br />\n                    <label>Review: </label>\n                    <textarea\n                        className=\"desc\"\n                        type=\"text\"\n                        name=\"rating\"\n                        value={this.state.rating}\n                        onChange={this.onInputChange}\n                    ></textarea><br />\n                    <input\n                        type=\"submit\"\n                        className=\"sButton pButton\"\n                    ></input>\n                </form>\n            </div>\n        )\n    }\n}\n\nexport default WriteReview;","import React from 'react';\nimport {\n  BrowserRouter,\n  Switch,\n  Route\n} from \"react-router-dom\";\nimport Home from './components/Home';\nimport Places from './components/Places.js';\nimport AddPlace from './components/AddPlace.js';\nimport Reviews from './components/Reviews';\nimport WriteReview from './components/WriteReview';\n\nimport './App.css';\n\nfunction App() {\n\treturn (\n\t\t<BrowserRouter>\n\t\t\t<Switch>\n\t\t\t\t<Route path=\"/mynearbyplaces\">\n\t\t\t\t\t<Home />\n\t\t\t\t</Route>\n\t\t\t\t<Route path=\"/places\" render={props => <Places {...props} />}>\n\t\t\t\t</Route>\n\t\t\t\t<Route path=\"/addplace\">\n\t\t\t\t\t<AddPlace />\n\t\t\t\t</Route>\n\t\t\t\t<Route path=\"/reviews\" render={props => <Reviews {...props} />}>\n\t\t\t\t</Route>\n\t\t\t\t<Route path=\"/writereview\" render={props => <WriteReview {...props} />}>\n\t\t\t\t</Route>\n\t\t\t</Switch>\n\t\t</BrowserRouter>\n  \t);\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}