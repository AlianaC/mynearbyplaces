{"version":3,"sources":["components/Home.js","components/ServerInterface/PlacesData.js","components/ServerInterface/server.js","components/Places.js","components/AddPlace.js","components/Reviews.js","App.js","reportWebVitals.js","index.js"],"names":["Home","props","search","event","setState","preventDefault","onInputChange","value","target","name","state","searchTerm","this","from","pathname","to","className","onSubmit","rows","cols","type","onChange","React","Component","placesdata","city","description","reviews","author","rate","rating","server","getAllPlaces","addPlace","place","push","deletePlace","i","length","curr","splice","Places","places","showPlaces","allPlaces","place1","onClick","location","AddPlace","submitPlace","complete","maxLength","size","Reviews","showReviews","allRevs","App","path","render","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.401ff905.chunk.js","sourcesContent":["import React from 'react';\nimport './Home.css';\nimport { Redirect } from 'react-router-dom';\n\nclass Home extends React.Component {\n    constructor(props){\n        super(props)\n        this.state = {\n            searchTerm:\"\",\n            search: false\n        };\n    }\n\n    search = (event) => {\n        this.setState({search: true})\n        event.preventDefault();\n    }\n\n    onInputChange = (event) => {\n        const value = event.target.value;\n        const name = event.target.name;\n        this.setState({[name]: value});\n    }\n\n    render() {\n        if(this.state.search) {\n            let from = {pathname: \"/places\", state: {searchTerm: this.state.searchTerm}};\n            return (\n                <Redirect to={from} />\n            );\n        }\n\n        return (\n            <div className=\"home\">\n                <h1 className=\"title\">mynearbyplaces</h1>\n                <form onSubmit={this.search}>\n                    <input \n                    className=\"search\" \n                    rows=\"1\" cols=\"30\"\n                    type=\"text\"\n                    name=\"searchTerm\"\n                    value={this.state.searchTerm}\n                    onChange={this.onInputChange} />\n                    <input\n                    type=\"submit\" \n                    className=\"searchButton\" \n                    value=\"Search\">\n                    </input>\n                </form>\n            </div>\n        );\n    }\n}\n\nexport default Home;","let placesdata = [\n    {\n        name: \"Planet Pizza\",\n        city: \"Tucson\",\n        state: \"AZ\",\n        description: \"Pizza place that is out of this world.\",\n        reviews: [\n            {\n                author: \"Buzz Lightyear\",\n                rate: 5,\n                rating: \"Great time with great pizza.\"\n            },\n            {\n                author: \"Mr.Potato Head\",\n                rate: 2,\n                rating: \"Hated it.\"\n            }\n        ]\n    },\n    {\n        name: \"NY Pizza Department\",\n        city: \"Tucson\",\n        state: \"AZ\",\n        description: \"Classic New York pizza place.\",\n        reviews: [\n            {\n                author: \"Woody\",\n                rate: 4,\n                rating: \"Pretty good.\"\n            },\n            {\n                author: \"Jessie\",\n                rate: 4,\n                rating: \"Perfect.\"\n            }\n        ]\n    }\n];\nexport default placesdata;\n\n","import placesdata from \"./PlacesData.js\";\n\nlet getAllPlaces = () => {\n    return placesdata;\n}\n\nlet addPlace = (name, city, state, description) => {\n    let place = {\n        name: name,\n        city: city,\n        state: state,\n        description: description,\n        reviews: []\n    };\n    \n    placesdata.push(place);\n}\n\nlet deletePlace = (name, city, state) => {\n    for(let i = 0; i < placesdata.length; i++){\n        let curr = placesdata[i];\n        if(curr.name === name && curr.city === city && curr.state === state){\n            placesdata.splice(i, i + 1);\n        }\n    }\n}\n\nlet server = {getAllPlaces: getAllPlaces, addPlace: addPlace, deletePlace: deletePlace};\n\nexport default server;\n","import React from 'react';\nimport './Places.css';\nimport { Link } from 'react-router-dom';\nimport server from './ServerInterface/server';\n\n\n\nclass Places extends React.Component{\n    constructor(props){\n        super(props)\n        this.state = {\n            searchTerm: \"\",\n            places: []\n        }\n    }\n\n    deletePlace = (name, city, state) => {\n        server.deletePlace(name, city, state);\n        this.setState({places: server.getAllPlaces()});\n    }\n\n    showPlaces = () => {\n        let allPlaces = [];\n        let places = this.state.places;\n        for(let i = 0; i < places.length; i++){\n            let place = places[i]\n            let from = {pathname: \"/reviews\", state: {place1: place}};\n            allPlaces.push(\n                <div className=\"place\" key={i}>\n                    <p className=\"makeRed\">{place.name}</p>\n                    <p><b>Located:</b> {place.city + \", \" + place.state}</p>\n                    <p><b>Description:</b> {place.description}</p>\n                    <Link to={from}>\n                        <button \n                        className=\"pButton readButton\"\n                        >Read Reviews</button>\n                    </Link>\n                    <button \n                    className=\"pButton\"\n                    >Update</button>\n                    <button \n                    className=\"pButton\"\n                    >Write a Review</button>\n                    <button \n                    className=\"pButton\"\n                    onClick={() => this.deletePlace(place.name, place.city, place.state)}\n                    >Delete</button>\n                </div>\n            )\n        }\n\n        return (\n            allPlaces\n        );\n    }\n\n    componentDidMount() {\n        const location = this.props.location;\n        if(location){\n            if(location.state){\n                if(location.state.searchTerm){\n                    this.setState({searchTerm:`for '${location.state.searchTerm}'`});\n                }\n            }\n        }\n        this.setState({places: server.getAllPlaces()});\n    }\n\n    render() {\n\n        return (\n            <div>\n                <div className=\"header\">\n                    <h2>mynearbyplaces</h2>\n                </div>\n                <br></br>\n                <div className=\"header2\">\n                    <Link to=\"/mynearbyplaces\">\n                        <button className=\"homeButton pButton\">Home</button>\n                    </Link>\n                    <p>Showing all results {this.state.searchTerm}</p>\n                    <Link to=\"/addplace\">\n                        <button className=\"addPlaceButton pButton\">Add a Place</button>\n                    </Link>\n                </div>\n                <hr></hr>\n                {this.showPlaces()}\n            </div>\n        );\n    }\n}\n\nexport default Places;","import React from 'react';\nimport './AddPlace.css';\nimport { Link, Redirect } from 'react-router-dom';\nimport server from \"./ServerInterface/server.js\";\n\nclass AddPlace extends React.Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            name: \"\",\n            city: \"\",\n            state: \"\",\n            description: \"\",\n            complete: false\n        }\n    }\n\n    onInputChange = (event) => {\n        const value = event.target.value;\n        const name = event.target.name;\n        this.setState({[name]: value});\n    }\n\n    submitPlace = (event) => {\n        const {name, city, state, description} = this.state;\n        server.addPlace(name, city, state, description);\n        event.preventDefault();\n        this.setState({complete: true});\n    }\n\n    render() {\n        if(this.state.complete){\n            return (<Redirect to={'/mynearbyplaces'} />);\n        }\n        return (\n            <div>\n                <div className=\"header\">\n                    <h2>mynearbyplaces</h2>\n                </div>\n                <div className=\"header2\">\n                    <Link to=\"/mynearbyplaces\">\n                        <button className=\"homeButton2 pButton\">Home</button>\n                    </Link>\n                </div>\n                <hr />\n                <div className=\"form\">\n                    <form onSubmit={this.submitPlace}>\n                        <label>Name: </label>\n                        <input\n                            className=\"input\"\n                            type=\"text\"\n                            name=\"name\"\n                            value={this.state.name}\n                            onChange={this.onInputChange}\n                        ></input><br />\n                        <label>City: </label>\n                        <input\n                            className=\"input\"\n                            type=\"text\"\n                            name=\"city\"\n                            value={this.state.city}\n                            onChange={this.onInputChange}\n                        ></input>\n                        <label>State: </label>\n                        <input\n                            className=\"input\"\n                            type=\"textarea\"\n                            name=\"state\"\n                            value={this.state.state}\n                            onChange={this.onInputChange}\n                            maxLength=\"2\"\n                            size=\"2\"\n                        ></input><br />\n                        <label>Description: </label><br />\n                        <textarea\n                            className=\"desc\"\n                            type=\"text\"\n                            name=\"description\"\n                            value={this.state.description}\n                            onChange={this.onInputChange}\n                        ></textarea><br />\n                        <input\n                            type=\"submit\"\n                            className=\"sButton pButton\"\n                        ></input>\n                    </form>\n                </div>\n\n            </div>\n        )\n    }\n\n}\n\nexport default AddPlace;","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport './Reviews.css'\n\nclass Reviews extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            place: {}\n        }\n    };\n\n    showReviews = (reviews) => {\n        let allRevs = [];\n        for(let i = 0; i < reviews.length; i++){\n            allRevs.push(\n                <div className=\"review\" key={i}>\n                    <h4><b className=\"labelRev\">Author: </b>{reviews[i].author}</h4>\n                    <p>{reviews[i].rate} out of 5</p>\n                    <p><b className=\"labelRev\">Rating: </b>{reviews[i].rating}</p>\n                    \n                </div>\n            )\n        }        \n\n        return (\n            allRevs\n        );\n    }\n\n    render() {\n        const location = this.props.location;\n        let place = {};\n        if(location){\n            if(location.state){\n                if(location.state.place1){\n                    let curr = location.state.place1;\n                    //alert(place.reviews[0].author)\n                    //this.setState({place: place});\n                    place = curr;\n                }\n            }\n        }\n        return (\n            <div>\n                <div className=\"header\">\n                    <h2>mynearbyplaces</h2>\n                </div>\n                <div className=\"header2\">\n                    <Link to=\"/mynearbyplaces\">\n                        <button className=\"homeButton2 pButton\">Home</button>\n                    </Link>\n                    <Link to=\"/addplace\">\n                        <button className=\"addPlaceButton pButton\">Write a Review</button>\n                    </Link>\n                </div>\n                <hr />\n                <p className=\"placeHeader\">Reviews for {place.name}</p>\n                {this.showReviews(place.reviews)}\n            </div>\n        );\n    }\n}\n\nexport default Reviews;","import React from 'react';\nimport {\n  BrowserRouter,\n  Switch,\n  Route\n} from \"react-router-dom\";\nimport Home from './components/Home';\nimport Places from './components/Places.js';\nimport AddPlace from './components/AddPlace.js';\nimport Reviews from './components/Reviews';\nimport './App.css';\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <Switch>\n        <Route path=\"/mynearbyplaces\">\n          <Home />\n        </Route>\n        <Route path=\"/places\" render={props => <Places {...props} />}>\n        </Route>\n        <Route path=\"/addplace\">\n          <AddPlace />\n        </Route>\n        <Route path=\"/reviews\" render={props => <Reviews {...props} />}>\n        </Route>\n      </Switch>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}